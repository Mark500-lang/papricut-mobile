workflows:
  ios-distribute:
    name: iOS Distribute (Manual Signing)
    integrations:
      app_store_connect: Codemagic-key
    environment:
      vars:
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
        BUNDLE_ID: "papricut.app.mobile"
        TEAM_ID: "H9A4H444G4"
        PROFILE_NAME: "Papricut_AppStore_2025"
        APP_STORE_CONNECT_KEY_ID: $APP_STORE_CONNECT_KEY_ID  # Add these vars
        APP_STORE_CONNECT_ISSUER_ID: $APP_STORE_CONNECT_ISSUER_ID
        APP_STORE_CONNECT_PRIVATE_KEY: $APP_STORE_CONNECT_PRIVATE_KEY
      groups:
        - Papricut
    triggering:
      events:
        - push
    scripts:
      - name: Install dependencies
        script: |
          npm install -g @ionic/cli
          npm ci
          npm install

      - name: Clean build environment
        script: |
          rm -rf ~/Library/Developer/Xcode/DerivedData/*
          rm -rf "$HOME/build"
          mkdir -p "$HOME/build"

      - name: Build Ionic project
        script: |
          ionic build --prod
          npx cap sync ios
          npx cap update ios
          cd ios/App && pod install && cd ../..

      - name: Decode signing certificate and provisioning profile
        script: |
          echo "$DISTRIBUTION_CERTIFICATE" | base64 --decode > signing.p12
          echo "$PROVISIONING_PROFILE" | base64 --decode > "$PROFILE_NAME.mobileprovision"

      - name: Install provisioning profile and certificate
        script: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          PROFILE_UUID=$(/usr/libexec/PlistBuddy -c 'Print UUID' /dev/stdin <<< $(security cms -D -i "$PROFILE_NAME.mobileprovision"))
          cp "$PROFILE_NAME.mobileprovision" ~/Library/MobileDevice/Provisioning\ Profiles/"$PROFILE_UUID".mobileprovision
          echo "export PROFILE_UUID=$PROFILE_UUID" >> $CM_ENV

          security create-keychain -p "" build.keychain
          security import signing.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-key-partition-list -S apple-tool:,apple: -k "" build.keychain

      - name: Verify signing assets
        script: |
          echo "Provisioning Profile UUID: $PROFILE_UUID"
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
          security find-identity -v -p codesigning

      - name: Configure Pods project for automatic signing
        script: |
          # Disable code signing for all Pods targets
          /usr/libexec/PlistBuddy -c "Add :objects:13D8C11F2543F3D900D83B1E:buildSettings:CODE_SIGNING_ALLOWED string NO" ios/App/Pods/Pods.xcodeproj/project.pbxproj
          /usr/libexec/PlistBuddy -c "Add :objects:13D8C11F2543F3D900D83B1E:buildSettings:CODE_SIGNING_REQUIRED string NO" ios/App/Pods/Pods.xcodeproj/project.pbxproj

      - name: Force Increment Build Number
        script: |
          # For iOS projects
          PLIST_PATH="ios/App/App/Info.plist"
          CURRENT_BUILD=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" "$PLIST_PATH")
          NEW_BUILD=$((CURRENT_BUILD + 1))
          /usr/libexec/PlistBuddy -c "Set CFBundleVersion $NEW_BUILD" "$PLIST_PATH"
          
          echo "Updated build number from $CURRENT_BUILD to $NEW_BUILD"
          cat "$PLIST_PATH" | grep -A 1 CFBundleVersion

      - name: Configure Capacitor for App Store
        script: |
          # 1. Create backup of original Podfile
          cp ios/App/Podfile ios/App/Podfile.bak
          
          # 2. Prepend static framework configuration
          echo "use_frameworks! :linkage => :static" > ios/App/Podfile.tmp
          cat ios/App/Podfile.bak >> ios/App/Podfile.tmp
          mv ios/App/Podfile.tmp ios/App/Podfile
          
          # 3. Continue with pod installation
          cd ios/App && pod install --repo-update
          cd ../..

      - name: Build .ipa with fixed settings
        script: |
          xcodebuild -workspace "$XCODE_WORKSPACE" \
                    -scheme "$XCODE_SCHEME" \
                    -sdk iphoneos \
                    -configuration Release \
                    -archivePath "$HOME/build/App.xcarchive" \
                    CURRENT_PROJECT_VERSION=2 \
                    MARKETING_VERSION=4.3 \
                    DEVELOPMENT_TEAM="$TEAM_ID" \
                    PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
                    CODE_SIGN_STYLE="Manual" \
                    PROVISIONING_PROFILE_SPECIFIER="$PROFILE_NAME" \
                    OTHER_CODE_SIGN_FLAGS="--keychain build.keychain" \
                    archive

          xcodebuild -exportArchive \
                    -archivePath "$HOME/build/App.xcarchive" \
                    -exportOptionsPlist ExportOptions.plist \
                    -exportPath "$HOME/build/ipa" \
                    -allowProvisioningUpdates

    artifacts:
      - $HOME/build/ipa/*.ipa

    publishing:
      app_store_connect:
        auth: integration  # This must be "integration" not "api_key"
        api_key: Codemagic-key  # Must match the integration name
        submit_to_testflight: true
