workflows:
  ios-distribute:
    name: iOS Distribute (Manual Signing)
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: Codemagic-key
    environment:
      vars:
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
        BUNDLE_ID: "papricut.app.mobile"
        TEAM_ID: "H9A4H444G4"
        PROFILE_NAME: "Papricut_AppStore_2025"
        CERTIFICATE_PASSWORD: $CERTIFICATE_PASSWORD
      groups:
        - Papricut
    triggering:
      events:
        - push
    scripts:
      - name: Set up keychain and build directories
        script: |
          mkdir -p "$HOME/build/ipa"
          security create-keychain -p "" build.keychain
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain

      - name: Install dependencies
        script: |
          npm install -g @ionic/cli
          npm ci
          npm install

      - name: Build Ionic project
        script: |
          ionic build --prod
          npx cap sync ios
          npx cap update ios
          cd ios/App && pod install --repo-update && cd ../..

      - name: Decode signing assets
        script: |
          echo "$DISTRIBUTION_CERTIFICATE" | base64 --decode > signing.p12
          echo "$PROVISIONING_PROFILE" | base64 --decode > "$PROFILE_NAME.mobileprovision"
          
          # Install provisioning profile
          PROFILE_UUID=$(/usr/libexec/PlistBuddy -c 'Print UUID' /dev/stdin <<< $(security cms -D -i "$PROFILE_NAME.mobileprovision"))
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp "$PROFILE_NAME.mobileprovision" ~/Library/MobileDevice/Provisioning\ Profiles/"$PROFILE_UUID".mobileprovision
          echo "export PROFILE_UUID=$PROFILE_UUID" >> $CM_ENV

          # Import certificate
          security import signing.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -k "" build.keychain

      - name: Verify signing assets
        script: |
          echo "Provisioning Profile UUID: $PROFILE_UUID"
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
          security find-identity -v -p codesigning build.keychain

      - name: Build and export IPA
        script: |
          # Archive
          xcodebuild -workspace "$XCODE_WORKSPACE" \
                    -scheme "$XCODE_SCHEME" \
                    -sdk iphoneos \
                    -configuration Release \
                    -archivePath "$HOME/build/App.xcarchive" \
                    -allowProvisioningUpdates \
                    DEVELOPMENT_TEAM="$TEAM_ID" \
                    PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
                    CODE_SIGN_STYLE="Manual" \
                    CODE_SIGN_IDENTITY="iPhone Distribution" \
                    PROVISIONING_PROFILE_SPECIFIER="$PROFILE_NAME" \
                    OTHER_CODE_SIGN_FLAGS="--keychain build.keychain" \
                    archive

          # Export IPA
          xcodebuild -exportArchive \
                    -archivePath "$HOME/build/App.xcarchive" \
                    -exportOptionsPlist ExportOptions.plist \
                    -exportPath "$HOME/build/ipa" \
                    -allowProvisioningUpdates \
                    CODE_SIGN_STYLE="Manual" \
                    CODE_SIGN_IDENTITY="iPhone Distribution" \
                    PROVISIONING_PROFILE_SPECIFIER="$PROFILE_NAME" \
                    OTHER_CODE_SIGN_FLAGS="--keychain build.keychain"

          # Verify IPA was created
          if [ ! -f "$HOME/build/ipa/"*.ipa ]; then
            echo "‚ùå Error: No IPA file was generated"
            ls -la "$HOME/build/ipa/"
            exit 1
          fi

    artifacts:
      - $HOME/build/ipa/*.ipa

    publishing:
      app_store_connect:
        auth: integration
        api_key: Codemagic-key
        submit_to_testflight: true