workflows:
  ios-distribute:
    name: iOS Distribute (Manual Signing)
    integrations:
      app_store_connect: Codemagic-key
    environment:
      vars:
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
        NODE_VERSION: "18.x"
        COCOAPODS_VERSION: "1.15.2"
      groups:
        - Papricut
    triggering:
      events:
        - push
    scripts:
      # PHASE 1: VALIDATE ENVIRONMENT
      - name: Verify Project Structure
        script: |
          [ -f "exportOptions.plist" ] || { echo "❌ Missing exportOptions.plist"; exit 1; }
          [ -f "ios/App/App.xcodeproj/project.pbxproj" ] || { echo "❌ Xcode project missing"; exit 1; }
          [ -d "ios/App/App/public" ] || { echo "❌ Web assets missing"; exit 1; }
          [ -f "www/main.js" ] || { echo "❌ Angular not built"; exit 1; }

      # PHASE 2: ENHANCED DEPENDENCY SETUP
      - name: Install Dependencies
        script: |
          npm ci
          npx cap sync ios
          
          # Force-clean pod cache and reinstall
          cd ios/App
          pod cache clean --all
          pod deintegrate
          pod install --repo-update --clean-install
          
          # Verify ALL Capacitor pods exist
          PODS=(
            "Capacitor.framework"
            "CapacitorCordova.framework"
            "CapacitorApp.framework"
            "CapacitorBrowser.framework"
            "CapacitorCamera.framework"
            "CapacitorDevice.framework"
            "CapacitorFilesystem.framework"
            "CapacitorHaptics.framework"
            "CapacitorKeyboard.framework"
            "CapacitorNetwork.framework"
            "CapacitorPushNotifications.framework"
            "CapacitorSplashScreen.framework"
            "CapacitorStatusBar.framework"
          )
          for pod in "${PODS[@]}"; do
            [ -d "Pods/${pod}" ] || { echo "❌ Pod missing: ${pod}"; exit 1; }
          done

      # PHASE 3: ROBUST SIGNING SETUP
      - name: Configure Signing
        script: |
          cd ios/App
          
          # Decode and verify signing assets
          echo "$DISTRIBUTION_CERTIFICATE" | base64 --decode > signing.p12
          echo "$PROVISIONING_PROFILE" | base64 --decode > profile.mobileprovision
          
          # Validate provisioning profile
          PROFILE_UUID=$(grep -a -A1 UUID profile.mobileprovision | grep -io "[-A-F0-9]\{36\}")
          [ -n "$PROFILE_UUID" ] || { echo "❌ Invalid provisioning profile"; exit 1; }
          
          # Setup keychain with retries
          for i in {1..3}; do
            security create-keychain -p "" build.keychain && break || sleep 5
          done
          security import signing.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -k "" build.keychain
          
          # Install provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/${PROFILE_UUID}.mobileprovision

      # PHASE 4: BUILD WITH FRAMEWORK VALIDATION
      - name: Build & Validate
        script: |
          cd ios/App
          rm -rf build/*
          
          # Build with framework search paths explicitly set
          xcodebuild \
            -workspace App.xcworkspace \
            -scheme App \
            -configuration Release \
            -archivePath build/App.xcarchive \
            OTHER_SWIFT_FLAGS="$(echo -extra-xcconfig Pods/Target\ Support\ Files/Pods-App/Pods-App.release.xcconfig)" \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            PROVISIONING_PROFILE_SPECIFIER="$PROFILE_UUID" \
            DEVELOPMENT_TEAM="H9A4H444G4" \
            clean archive | tee xcodebuild.log
          
          # FRAMEWORK VERIFICATION
          ARCHIVE_PATH="build/App.xcarchive/Products/Applications/App.app"
          FRAMEWORKS=(
            "Capacitor.framework"
            "CapacitorCordova.framework"
            "CapacitorApp.framework"
            "CapacitorBrowser.framework"
            "CapacitorCamera.framework"
            "CapacitorDevice.framework"
            "CapacitorFilesystem.framework"
            "CapacitorHaptics.framework"
            "CapacitorKeyboard.framework"
            "CapacitorNetwork.framework"
            "CapacitorPushNotifications.framework"
            "CapacitorSplashScreen.framework"
            "CapacitorStatusBar.framework"
          )
          
          for framework in "${FRAMEWORKS[@]}"; do
            # Check framework exists
            [ -d "$ARCHIVE_PATH/Frameworks/$framework" ] || {
              echo "❌ Missing framework: $framework";
              echo "Pod installation state:";
              ls -la Pods/Capacitor*;
              exit 1;
            }
            
            # Verify code signing
            codesign -dv "$ARCHIVE_PATH/Frameworks/$framework" 2>&1 | grep -q "TeamIdentifier=H9A4H444G4" || {
              echo "❌ Framework signing failed: $framework";
              codesign -dv "$ARCHIVE_PATH/Frameworks/$framework";
              exit 1;
            }
          done

      # PHASE 5: EXPORT WITH ENHANCED CHECKS
      - name: Export IPA
        script: |
          cd ios/App
          xcodebuild -exportArchive \
            -archivePath build/App.xcarchive \
            -exportOptionsPlist ../exportOptions.plist \
            -exportPath build/ipa
          
          # Verify all critical assets
          unzip -l build/ipa/App.ipa | grep -q "Payload/App.app/Frameworks/Capacitor.framework" || {
            echo "❌ Capacitor framework missing from IPA";
            exit 1;
          }

    artifacts:
      - ios/App/build/ipa/App.ipa
      - ios/App/xcodebuild.log

    publishing:
      app_store_connect:
        auth: integration
        api_key: Codemagic-key
        submit_to_testflight: true
